"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var defaultClassPrefix_1 = __importDefault(require("../../defaultClassPrefix"));
var Context_1 = __importDefault(require("../Context"));
var useCollapsibleGroup_1 = __importDefault(require("../../CollapsibleGroup/useCollapsibleGroup"));
var Collapsible = function (props) {
    var openOnInit = props.openOnInit, classPrefix = props.classPrefix, transTime = props.transTime, transCurve = props.transCurve, children = props.children, onToggle = props.onToggle;
    var _a = react_1.useState(openOnInit), isOpen = _a[0], setIsOpen = _a[1];
    var _b = react_1.useState(false), ignoreGroupUpdate = _b[0], setIgnoreGroupUpdate = _b[1];
    var _c = react_1.useState(0), prevGroupToggleCount = _c[0], setPrevGroupToggleCount = _c[1];
    var _d = useCollapsibleGroup_1.default(), reportToggleToGroup = _d.reportToggleToGroup, groupToggleCount = _d.toggleCount, groupClassPrefix = _d.classPrefix, groupTransTime = _d.transTime, groupTransCurve = _d.transCurve, allowMultiple = _d.allowMultiple;
    var handleClick = function () {
        if (!allowMultiple && reportToggleToGroup) {
            setIgnoreGroupUpdate(true);
            reportToggleToGroup();
        }
        else
            setIsOpen(!isOpen);
        if (typeof onToggle === 'function')
            onToggle();
    };
    react_1.useEffect(function () {
        if (groupToggleCount > prevGroupToggleCount) {
            if (!ignoreGroupUpdate)
                setIsOpen(false);
            else {
                setIgnoreGroupUpdate(false);
                setIsOpen(!isOpen);
            }
            setPrevGroupToggleCount(groupToggleCount);
        }
    }, [groupToggleCount, prevGroupToggleCount, isOpen, ignoreGroupUpdate]);
    var context = {
        classPrefix: classPrefix,
        rootClass: (classPrefix || groupClassPrefix || defaultClassPrefix_1.default) + "__collapsible",
        openOnInit: openOnInit,
        isOpen: isOpen,
        handleClick: handleClick,
        transTime: (typeof transTime === 'number' && transTime) || (typeof transTime === 'number' && groupTransTime) || 0,
        transCurve: transCurve || groupTransCurve,
        onToggle: onToggle,
    };
    return (react_1.default.createElement(Context_1.default.Provider, { value: __assign({}, context) }, (children && (typeof children === 'function' ? children(__assign({}, context)) : children)) || null));
};
exports.default = Collapsible;
//# sourceMappingURL=index.js.map