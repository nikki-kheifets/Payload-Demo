"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useGrid = void 0;
var react_1 = __importStar(require("react"));
var Cell_1 = require("../Cell");
var Settings_1 = require("../Settings");
var defaults_1 = __importDefault(require("../defaults"));
var Context = react_1.createContext({
    cols: defaults_1.default.cols,
    rows: defaults_1.default.rows,
});
var useGrid = function () { return react_1.useContext(Context); };
exports.useGrid = useGrid;
var Grid = function (props) {
    var children = props.children, className = props.className, style = props.style, _a = props.htmlElement, htmlElement = _a === void 0 ? 'div' : _a;
    var containingCell = Cell_1.useCell();
    var settings = Settings_1.useSettings();
    var rowGap = settings.rowGap;
    var colGap = settings.colGap;
    var columns = (containingCell === null || containingCell === void 0 ? void 0 : containingCell.cols) || settings.cols;
    if (colGap === 'columnWidth') {
        colGap = "calc(100% * ( 1 / (" + columns + " * 2)))";
    }
    var value = {
        cols: columns,
        rows: 1,
    };
    var Tag = htmlElement;
    return (react_1.default.createElement(Context.Provider, { value: value },
        react_1.default.createElement(Tag, { className: className, style: __assign(__assign({}, style || {}), { display: 'grid', columnGap: colGap, rowGap: rowGap, gridTemplateColumns: "repeat(" + columns + ", 1fr)" }) }, children)));
};
exports.default = Grid;
//# sourceMappingURL=index.js.map