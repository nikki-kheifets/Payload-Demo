"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_transition_group_1 = require("react-transition-group");
var useModal_1 = __importDefault(require("../useModal"));
var baseClass_1 = __importDefault(require("./baseClass"));
var generateTransitionClasses_1 = __importDefault(require("../ModalProvider/generateTransitionClasses"));
var ModalContainer = function (props) {
    var _a = useModal_1.default(), oneIsOpen = _a.oneIsOpen, classPrefix = _a.classPrefix, transTime = _a.transTime, setContainerRef = _a.setContainerRef, closeAll = _a.closeAll, closeOnBlur = _a.closeOnBlur;
    var id = props.id, className = props.className, _b = props.style, style = _b === void 0 ? {} : _b, _c = props.htmlElement, htmlElement = _c === void 0 ? 'div' : _c, _d = props.htmlAttributes, htmlAttributes = _d === void 0 ? {} : _d, children = props.children;
    var baseClass = classPrefix + "__" + baseClass_1.default;
    var mergedClasses = [
        baseClass,
        className,
    ].filter(Boolean).join(' ');
    var mergedAttributes = __assign(__assign({}, htmlAttributes), { onClick: function () {
            if (closeOnBlur)
                closeAll();
            if (typeof htmlAttributes.onClick === 'function')
                htmlAttributes.onClick();
        } });
    var Tag = htmlElement;
    return (react_1.default.createElement(react_transition_group_1.CSSTransition, { in: oneIsOpen, timeout: transTime, classNames: generateTransitionClasses_1.default(baseClass), appear: true },
        react_1.default.createElement(Tag, __assign({}, __assign({ id: id, className: mergedClasses, style: style, ref: setContainerRef }, mergedAttributes)), children && children)));
};
exports.default = ModalContainer;
//# sourceMappingURL=index.js.map