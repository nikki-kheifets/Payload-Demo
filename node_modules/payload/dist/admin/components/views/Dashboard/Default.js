import React from 'react';
import { useHistory } from 'react-router-dom';
import { useConfig } from '@payloadcms/config-provider';
import Eyebrow from '../../elements/Eyebrow';
import Card from '../../elements/Card';
import Button from '../../elements/Button';
import './index.scss';
const baseClass = 'dashboard';
const Dashboard = (props) => {
    const { collections, globals, permissions, } = props;
    const { push } = useHistory();
    const { routes: { admin, }, } = useConfig();
    return (React.createElement("div", { className: baseClass },
        React.createElement(Eyebrow, null),
        React.createElement("div", { className: `${baseClass}__wrap` },
            React.createElement("h3", { className: `${baseClass}__label` }, "Collections"),
            React.createElement("ul", { className: `${baseClass}__card-list` }, collections.map((collection) => {
                var _a, _b, _c;
                const hasCreatePermission = (_c = (_b = (_a = permissions === null || permissions === void 0 ? void 0 : permissions.collections) === null || _a === void 0 ? void 0 : _a[collection.slug]) === null || _b === void 0 ? void 0 : _b.create) === null || _c === void 0 ? void 0 : _c.permission;
                return (React.createElement("li", { key: collection.slug },
                    React.createElement(Card, { title: collection.labels.plural, onClick: () => push({ pathname: `${admin}/collections/${collection.slug}` }), actions: hasCreatePermission ? (React.createElement(Button, { el: "link", to: `${admin}/collections/${collection.slug}/create`, icon: "plus", round: true, buttonStyle: "icon-label", iconStyle: "with-border" })) : undefined })));
            })),
            (globals.length > 0) && (React.createElement(React.Fragment, null,
                React.createElement("h3", { className: `${baseClass}__label` }, "Globals"),
                React.createElement("ul", { className: `${baseClass}__card-list` }, globals.map((global) => (React.createElement("li", { key: global.slug },
                    React.createElement(Card, { title: global.label, onClick: () => push({ pathname: `${admin}/globals/${global.slug}` }) }))))))))));
};
export default Dashboard;
