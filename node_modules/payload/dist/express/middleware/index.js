"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const passport_1 = __importDefault(require("passport"));
const compression_1 = __importDefault(require("compression"));
const body_parser_1 = __importDefault(require("body-parser"));
const method_override_1 = __importDefault(require("method-override"));
const qs_middleware_1 = __importDefault(require("qs-middleware"));
const express_fileupload_1 = __importDefault(require("express-fileupload"));
const express_rate_limit_1 = __importDefault(require("express-rate-limit"));
const middleware_1 = __importDefault(require("../../localization/middleware"));
const authenticate_1 = __importDefault(require("./authenticate"));
const identifyAPI_1 = __importDefault(require("./identifyAPI"));
const corsHeaders_1 = __importDefault(require("./corsHeaders"));
const middleware = (payload) => {
    const rateLimitOptions = {
        windowMs: payload.config.rateLimit.window,
        max: payload.config.rateLimit.max,
    };
    if (typeof payload.config.rateLimit.skip === 'function')
        rateLimitOptions.skip = payload.config.rateLimit.skip;
    return [
        express_rate_limit_1.default(rateLimitOptions),
        passport_1.default.initialize(),
        identifyAPI_1.default('REST'),
        method_override_1.default('X-HTTP-Method-Override'),
        qs_middleware_1.default({ depth: 10 }),
        body_parser_1.default.urlencoded({ extended: true }),
        compression_1.default(payload.config.express.compression),
        middleware_1.default(payload.config.localization),
        express_1.default.json(payload.config.express.json),
        express_fileupload_1.default({
            parseNested: true,
            ...payload.config.upload,
        }),
        corsHeaders_1.default(payload.config),
        authenticate_1.default(payload.config),
        ...(payload.config.express.middleware || []),
    ];
};
exports.default = middleware;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXhwcmVzcy9taWRkbGV3YXJlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0RBQThCO0FBQzlCLHdEQUFnQztBQUNoQyw4REFBc0M7QUFDdEMsOERBQXFDO0FBQ3JDLHNFQUE2QztBQUM3QyxrRUFBeUM7QUFDekMsNEVBQTRDO0FBQzVDLDRFQUEyQztBQUMzQywrRUFBbUU7QUFDbkUsa0VBQTBDO0FBQzFDLGdFQUF3QztBQUd4QyxnRUFBd0M7QUFFeEMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxPQUFnQixFQUFPLEVBQUU7SUFDM0MsTUFBTSxnQkFBZ0IsR0FJbEI7UUFDRixRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTTtRQUN6QyxHQUFHLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRztLQUNsQyxDQUFDO0lBRUYsSUFBSSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxVQUFVO1FBQUUsZ0JBQWdCLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztJQUUvRyxPQUFPO1FBQ0wsNEJBQVMsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMzQixrQkFBUSxDQUFDLFVBQVUsRUFBRTtRQUNyQixxQkFBVyxDQUFDLE1BQU0sQ0FBQztRQUNuQix5QkFBYyxDQUFDLHdCQUF3QixDQUFDO1FBQ3hDLHVCQUFZLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDM0IscUJBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDekMscUJBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDL0Msb0JBQXNCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDbkQsaUJBQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pDLDRCQUFVLENBQUM7WUFDVCxXQUFXLEVBQUUsSUFBSTtZQUNqQixHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTTtTQUN6QixDQUFDO1FBQ0YscUJBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzNCLHNCQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUM1QixHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQztLQUM3QyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsa0JBQWUsVUFBVSxDQUFDIn0=