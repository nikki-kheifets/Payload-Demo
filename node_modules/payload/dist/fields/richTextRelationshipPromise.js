"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const populate = async ({ id, collection, data, overrideAccess, depth, currentDepth, payload, req, }) => {
    const dataRef = data;
    const doc = await payload.operations.collections.findByID({
        req: {
            ...req,
            payloadAPI: 'local',
        },
        collection,
        id,
        currentDepth: currentDepth + 1,
        overrideAccess,
        disableErrors: true,
        depth,
    });
    if (doc) {
        dataRef.value = doc;
    }
    else {
        dataRef.value = null;
    }
};
const recurseRichText = ({ req, children, payload, overrideAccess = false, depth, currentDepth = 0, field, promises, }) => {
    if (Array.isArray(children)) {
        children.forEach((element) => {
            var _a;
            const collection = payload.collections[element === null || element === void 0 ? void 0 : element.relationTo];
            if (element.type === 'relationship'
                && ((_a = element === null || element === void 0 ? void 0 : element.value) === null || _a === void 0 ? void 0 : _a.id)
                && collection
                && (depth && currentDepth <= depth)) {
                promises.push(populate({
                    req,
                    id: element.value.id,
                    data: element,
                    overrideAccess,
                    depth,
                    currentDepth,
                    payload,
                    field,
                    collection,
                }));
            }
            if (element === null || element === void 0 ? void 0 : element.children) {
                recurseRichText({
                    req,
                    children: element.children,
                    payload,
                    overrideAccess,
                    depth,
                    currentDepth,
                    field,
                    promises,
                });
            }
        });
    }
};
const richTextRelationshipPromise = ({ req, data, payload, overrideAccess, depth, currentDepth, field, }) => async () => {
    const promises = [];
    recurseRichText({
        req,
        children: data[field.name],
        payload,
        overrideAccess,
        depth,
        currentDepth,
        field,
        promises,
    });
    await Promise.all(promises);
};
exports.default = richTextRelationshipPromise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmljaFRleHRSZWxhdGlvbnNoaXBQcm9taXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2ZpZWxkcy9yaWNoVGV4dFJlbGF0aW9uc2hpcFByb21pc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUEwQkEsTUFBTSxRQUFRLEdBQUcsS0FBSyxFQUFFLEVBQ3RCLEVBQUUsRUFDRixVQUFVLEVBQ1YsSUFBSSxFQUNKLGNBQWMsRUFDZCxLQUFLLEVBQ0wsWUFBWSxFQUNaLE9BQU8sRUFDUCxHQUFHLEdBSUosRUFBRSxFQUFFO0lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBK0IsQ0FBQztJQUVoRCxNQUFNLEdBQUcsR0FBRyxNQUFNLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUN4RCxHQUFHLEVBQUU7WUFDSCxHQUFHLEdBQUc7WUFDTixVQUFVLEVBQUUsT0FBTztTQUNwQjtRQUNELFVBQVU7UUFDVixFQUFFO1FBQ0YsWUFBWSxFQUFFLFlBQVksR0FBRyxDQUFDO1FBQzlCLGNBQWM7UUFDZCxhQUFhLEVBQUUsSUFBSTtRQUNuQixLQUFLO0tBQ04sQ0FBQyxDQUFDO0lBRUgsSUFBSSxHQUFHLEVBQUU7UUFDUCxPQUFPLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztLQUNyQjtTQUFNO1FBQ0wsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7S0FDdEI7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLGVBQWUsR0FBRyxDQUFDLEVBQ3ZCLEdBQUcsRUFDSCxRQUFRLEVBQ1IsT0FBTyxFQUNQLGNBQWMsR0FBRyxLQUFLLEVBQ3RCLEtBQUssRUFDTCxZQUFZLEdBQUcsQ0FBQyxFQUNoQixLQUFLLEVBQ0wsUUFBUSxHQUNZLEVBQUUsRUFBRTtJQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDMUIsUUFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTs7WUFDdEMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsVUFBVSxDQUFDLENBQUM7WUFFNUQsSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLGNBQWM7b0JBQ2hDLE1BQUEsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLEtBQUssMENBQUUsRUFBRSxDQUFBO21CQUNsQixVQUFVO21CQUNWLENBQUMsS0FBSyxJQUFJLFlBQVksSUFBSSxLQUFLLENBQUMsRUFBRTtnQkFDbkMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ3JCLEdBQUc7b0JBQ0gsRUFBRSxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDcEIsSUFBSSxFQUFFLE9BQU87b0JBQ2IsY0FBYztvQkFDZCxLQUFLO29CQUNMLFlBQVk7b0JBQ1osT0FBTztvQkFDUCxLQUFLO29CQUNMLFVBQVU7aUJBQ1gsQ0FBQyxDQUFDLENBQUM7YUFDTDtZQUVELElBQUksT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLFFBQVEsRUFBRTtnQkFDckIsZUFBZSxDQUFDO29CQUNkLEdBQUc7b0JBQ0gsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRO29CQUMxQixPQUFPO29CQUNQLGNBQWM7b0JBQ2QsS0FBSztvQkFDTCxZQUFZO29CQUNaLEtBQUs7b0JBQ0wsUUFBUTtpQkFDVCxDQUFDLENBQUM7YUFDSjtRQUNILENBQUMsQ0FBQyxDQUFDO0tBQ0o7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLDJCQUEyQixHQUFHLENBQUMsRUFDbkMsR0FBRyxFQUNILElBQUksRUFDSixPQUFPLEVBQ1AsY0FBYyxFQUNkLEtBQUssRUFDTCxZQUFZLEVBQ1osS0FBSyxHQUNLLEVBQUUsRUFBRSxDQUFDLEtBQUssSUFBbUIsRUFBRTtJQUN6QyxNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFFcEIsZUFBZSxDQUFDO1FBQ2QsR0FBRztRQUNILFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMxQixPQUFPO1FBQ1AsY0FBYztRQUNkLEtBQUs7UUFDTCxZQUFZO1FBQ1osS0FBSztRQUNMLFFBQVE7S0FDVCxDQUFDLENBQUM7SUFFSCxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUIsQ0FBQyxDQUFDO0FBRUYsa0JBQWUsMkJBQTJCLENBQUMifQ==