import access from '../auth/requestHandlers/access';
import forgotPassword from '../auth/requestHandlers/forgotPassword';
import init from '../auth/requestHandlers/init';
import login from '../auth/requestHandlers/login';
import logout from '../auth/requestHandlers/logout';
import me from '../auth/requestHandlers/me';
import refresh from '../auth/requestHandlers/refresh';
import registerFirstUser from '../auth/requestHandlers/registerFirstUser';
import resetPassword from '../auth/requestHandlers/resetPassword';
import verifyEmail from '../auth/requestHandlers/verifyEmail';
import unlock from '../auth/requestHandlers/unlock';
import create from '../collections/requestHandlers/create';
import find from '../collections/requestHandlers/find';
import findByID from '../collections/requestHandlers/findByID';
import update from '../collections/requestHandlers/update';
import deleteHandler from '../collections/requestHandlers/delete';
import findOne from '../globals/requestHandlers/findOne';
import globalUpdate from '../globals/requestHandlers/update';
import { Payload } from '../index';
import preferenceUpdate from '../preferences/requestHandlers/update';
import preferenceFindOne from '../preferences/requestHandlers/findOne';
import preferenceDelete from '../preferences/requestHandlers/delete';
export declare type RequestHandlers = {
    collections: {
        create: typeof create;
        find: typeof find;
        findByID: typeof findByID;
        update: typeof update;
        delete: typeof deleteHandler;
        auth: {
            access: typeof access;
            forgotPassword: typeof forgotPassword;
            init: typeof init;
            login: typeof login;
            logout: typeof logout;
            me: typeof me;
            refresh: typeof refresh;
            registerFirstUser: typeof registerFirstUser;
            resetPassword: typeof resetPassword;
            verifyEmail: typeof verifyEmail;
            unlock: typeof unlock;
        };
    };
    globals: {
        findOne: typeof findOne;
        update: typeof globalUpdate;
    };
    preferences: {
        update: typeof preferenceUpdate;
        findOne: typeof preferenceFindOne;
        delete: typeof preferenceDelete;
    };
};
declare function bindRequestHandlers(ctx: Payload): void;
export default bindRequestHandlers;
